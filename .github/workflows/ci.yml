---
name: CI

on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          # This version because of https://github.com/NomicFoundation/hardhat/issues/3877
          node-version: '18.12.1'
          cache: 'npm'

      - name: Install modules
        run: npm install

      - name: Build
        run: npm run build
      
      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            artifacts
            cache/*.json
            typechain-types


  test-hardhat:
    name: Hardhat Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.12.1'
          cache: 'npm'

      - name: Install modules
        run: npm install

      - name: Load build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Test
        run: npm run test:hardhat


  test-forge:
    name: Forge Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - build
    steps:
      - uses: actions/checkout@v3

      # Forge needs node_modules/
      - uses: actions/setup-node@v3
        with:
          node-version: '18.12.1'

      - name: Install modules
        run: npm install

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version
          forge build

      - name: Run Forge tests
        run: |
          forge test -vvv


  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.12.1'

      - name: Install modules
        run: npm install

      - name: Lint
        run: npm run lint:check


  contracts-size:
    name: Contracts Size
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.12.1'

      - name: Install modules
        run: npm install

      - name: Load build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Check sizes
        run: npm run check-size


  # approve-test-bsc:
  #   name: Approve Test BSC
  #   runs-on: ubuntu-latest
  #   needs:
  #     - test-hardhat
  #     - test-forge
  #     - lint
  #     - contracts-size
  #   steps:
  #     - name: manual approve
  #       run: echo "Manually approved"


  # approve-test-polygon:
  #   name: Approve Test Polygon
  #   runs-on: ubuntu-latest
  #   needs:
  #     - test-hardhat
  #     - test-forge
  #     - lint
  #     - contracts-size
  #   steps:
  #     - name: manual approve
  #       run: echo "Manually approved"


  deploy-test-bsc:
    name: Deploy Test BSC
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - test-hardhat
      - test-forge
      - lint
      - contracts-size
    environment: test-bsc

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18.12.1'

      - name: Install modules
        run: npm install

      - name: Load build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Restore deploy artifacts
        run: |
          git clone https://Scriptoz:${{secrets.CI_TOKEN1}}@github.com/Scriptoz/ci-artifacts ci-artifacts1
          mkdir .openzeppelin && cp ci-artifacts1/test-bsc/* .openzeppelin/ || echo "Artifacts were not found"

      - name: Deploy
        run: npm run deploy
        env:
          DEPLOY_CONFIG_PATH: ci-artifacts1/test-bsc/test-bsc.yml
          HARDHAT_NETWORK: bsc
          MAINNET_PROVIDER_URL: '${{ vars.MAINNET_PROVIDER_URL }}'
          DEPLOYER_PRIVATE_KEY: '${{ secrets.DEPLOYER_PRIVATE_KEY }}'
          ETHERSCAN_APIKEY: '${{ secrets.ETHERSCAN_APIKEY }}'
          GNOSIS_SAFE_ADDRESS: '${{ vars.GNOSIS_SAFE_ADDRESS }}'
          GNOSIS_SAFE_SERVICE_URL: '${{ vars.GNOSIS_SAFE_SERVICE_URL }}'
          CONTRACT_VERSION: '${{ github.sha }}'

      - name: Upload deploy artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deploy-artifacts
          path: |
            .openzeppelin/

      - name: Push deploy artifacts
        run: |
          mkdir -p ci-artifacts1/test-bsc/ && cp .openzeppelin/* $_ && cd ci-artifacts1/test-bsc || exit 0
          git config --global user.name 'Git bot'
          git config --global user.email 'bot@noreply.github.com'
          git add . && git commit -m"Auto updated deploy artifacts" && git push || echo "No changes to commit"


  deploy-test-polygon:
    name: Deploy Test Polygon
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - test-hardhat
      - test-forge
      - lint
      - contracts-size
    environment: test-polygon

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18.12.1'

      - name: Install modules
        run: npm install

      - name: Load build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Restore deploy artifacts
        run: |
          git clone https://Scriptoz:${{secrets.CI_TOKEN1}}@github.com/Scriptoz/ci-artifacts ci-artifacts1
          mkdir .openzeppelin && cp ci-artifacts1/test-polygon/* .openzeppelin/ || echo "Artifacts were not found"

      - name: Deploy
        run: npm run deploy
        env:
          DEPLOY_CONFIG_PATH: environments/test-polygon.yml
          HARDHAT_NETWORK: polygon
          MAINNET_PROVIDER_URL: '${{ vars.MAINNET_PROVIDER_URL }}'
          DEPLOYER_PRIVATE_KEY: '${{ secrets.DEPLOYER_PRIVATE_KEY }}'
          ETHERSCAN_APIKEY: '${{ secrets.ETHERSCAN_APIKEY }}'
          GNOSIS_SAFE_ADDRESS: '${{ vars.GNOSIS_SAFE_ADDRESS }}'
          GNOSIS_SAFE_SERVICE_URL: '${{ vars.GNOSIS_SAFE_SERVICE_URL }}'
          CONTRACT_VERSION: '${{ github.sha }}'

      - name: Upload deploy artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deploy-artifacts
          path: |
            .openzeppelin/

      - name: Push deploy artifacts
        run: |
          mkdir -p ci-artifacts1/test-polygon/ && cp .openzeppelin/* $_ && cd ci-artifacts1/test-polygon || exit 0
          git config --global user.name 'Git bot'
          git config --global user.email 'bot@noreply.github.com'
          git add . && git commit -m"Auto updated deploy artifacts" && git push || echo "No changes to commit"
